name: Linux
# Qt
on: 
  push:
    paths:
      - '**'
      - '*.pro'
      - 'support/**'
      - '.github/workflows/ubuntu.yml'
  pull_request:
    paths:
      - '**'
      - '*.pro'
      - 'support/**'
      - '.github/workflows/ubuntu.yml'
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04,ubuntu-20.04]
        qt_ver: [6.2.2]
        qt_arch: [gcc_64]
    env:
         targetName: rateCheck
         VERSION: Linux
      
        
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.13.0
        with:
          version: ${{ matrix.qt_ver }}
          cached: 'false'
      - name: ubuntu install GL library
        run: sudo apt-get install -y libglew-dev libglfw3-dev libxcb*
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: build ubuntu
        run: |
          qmake
          make
          
          
      - name: install linuxdeployqt 
        run: |
          wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
          chmod a+x linuxdeployqt-continuous-x86_64.AppImage            
          
      # package
      - name: package
        run: |
         cp icon.png release/icon.png
         cp default.desktop release/default.desktop
         cp ExtBin/linux/iasl release/iasl
         chmod +x release/iasl
         mkdir release/lib
         cp libqscintilla2_qt5.so release/lib/libqscintilla2_qt5.so.15
         
         export VERSION # linuxdeployqt uses this for naming the file
         ./linuxdeployqt-continuous-x86_64.AppImage release/${targetName} -unsupported-allow-new-glibc -appimage
         chmod +x ${{ env.targetName }}-${{ env.VERSION }}-x86_64.AppImage
          
      # artifacts          
      - uses: actions/upload-artifact@v2
        with:
          
          name: ${{ env.targetName }}-${{ env.VERSION }}-x86_64.AppImage
          path: ${{ env.targetName }}-${{ env.VERSION }}-x86_64.AppImage
          
     # Release
      - name: uploadRelease
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.targetName }}-${{ env.VERSION }}-x86_64.AppImage
          asset_name: ${{ env.targetName }}-${{ env.VERSION }}-x86_64.AppImage
          tag: ${{ github.ref }}
          overwrite: true         
          
